# =============================================================================
# LegacyKeep Notification Service Configuration
# =============================================================================

# Application Configuration
spring.application.name=notification-service
server.port=8083
server.servlet.context-path=/api/v1

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database
spring.datasource.url=jdbc:postgresql://localhost:5432/notification_db
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Flyway Database Migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# =============================================================================
# Kafka Configuration
# =============================================================================

# Kafka Bootstrap Servers
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Consumer Configuration
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.legacykeep.*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.legacykeep.notification.dto.NotificationEventDto

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Kafka Topics
notification.kafka.topics.notification-events=notification-events
notification.kafka.topics.auth-events=auth-events
notification.kafka.topics.user-events=user-events
notification.kafka.topics.family-events=family-events
notification.kafka.topics.story-events=story-events

# =============================================================================
# Redis Configuration
# =============================================================================

# Redis Connection
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.database=0

# Redis Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# =============================================================================
# Email Configuration
# =============================================================================

# SMTP Configuration
spring.mail.host=${EMAIL_HOST:smtp.gmail.com}
spring.mail.port=${EMAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Email Template Configuration
notification.email.from=${EMAIL_FROM:noreply@legacykeep.com}
notification.email.from-name=LegacyKeep
notification.email.templates.path=classpath:templates/email
notification.email.templates.cache.enabled=true
notification.email.templates.cache.ttl=3600

# =============================================================================
# Firebase Configuration
# =============================================================================

# Firebase Admin SDK
firebase.project-id=${FIREBASE_PROJECT_ID:legacykeep-app}
firebase.credentials.path=${FIREBASE_CREDENTIALS_PATH:classpath:firebase-credentials.json}
firebase.messaging.default-notification-channel=default

# =============================================================================
# Notification Configuration
# =============================================================================

# Notification Settings
notification.rate-limit.max-per-minute=60
notification.rate-limit.max-per-hour=1000
notification.retry.max-attempts=3
notification.retry.initial-delay=1000
notification.retry.multiplier=2.0
notification.retry.max-delay=10000

# Template Configuration
notification.templates.email.base-url=${APP_BASE_URL:http://localhost:3000}
notification.templates.email.verification.expiry-hours=24
notification.templates.email.password-reset.expiry-hours=1

# =============================================================================
# Security Configuration
# =============================================================================

# JWT Configuration
notification.jwt.secret=${JWT_SECRET:legacykeep-notification-secret-key}
notification.jwt.expiration=${JWT_EXPIRATION:86400000}

# Service Authentication
notification.security.enabled=true
notification.security.service-token=${SERVICE_TOKEN:legacykeep-service-token}

# =============================================================================
# Monitoring & Actuator
# =============================================================================

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Health Checks
management.health.kafka.enabled=true
management.health.redis.enabled=true
management.health.db.enabled=true
management.health.mail.enabled=true

# =============================================================================
# Logging Configuration
# =============================================================================

# Logging Levels
logging.level.com.legacykeep.notification=INFO
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.mail=WARN

# Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# =============================================================================
# Development Configuration
# =============================================================================

# Development Settings
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# =============================================================================
# Testing Configuration
# =============================================================================

# Test Database (when running tests)
spring.test.database.replace=none
